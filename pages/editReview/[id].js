import React, { useState, useEffect } from "react";
import { useRouter } from "next/router";
import Head from "next/head";

import styles from "./editReview.module.scss";
import Header from "../../components/header/header";
import toast, { Toaster } from "react-hot-toast";

export default function EditReview() {
  const [movieData, setMovieData] = useState(undefined);
  const [newReview, setnewReview] = useState({});
  const [deletedStatus, setDeletedStatus] = useState(false);

  const [movieTitle, setMovieTitle] = useState("");
  const [description, setDescription] = useState("");
  const [director, setDirector] = useState("");
  const [movieImg, setMovieImg] = useState("");
  const [review, setReview] = useState("");
  const [stars, setStars] = useState("");

  const router = useRouter();
  const id = router.query.id;

  console.log(movieData);

  useEffect(() => {
    async function addMovie() {
      const requestOptions = {
        method: "PATCH",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(newReview),
      };
      const api = await fetch(
        `http://localhost:3000/movies/${id}`,
        requestOptions
      );
      const data = await api.json();
      setMovieData(data.id);
    }

    addMovie();
  }, [newReview, id]);

  useEffect(() => {
    async function loadData() {
      const api = await fetch(`http://localhost:3000/movies/${id}`);
      const result = await api.json();
      setMovieData(result);
    }
    if (id) {
      loadData();
    }
  }, [id]);

  function updateReview() {
    const newReview = {
      title: movieTitle,
      description: description,
      stars: stars,
      movieImg: movieImg,
      review: review,
      director: director,
    };

    setnewReview(newReview);
    toast.success("Review edited", { icon: "ðŸ’œ" });
  }

  function deleteReview() {
    const confirm = window.confirm("Do you really want to delete?");

    if (confirm === true) {
      fetch(`http://localhost:3000/movies/${id}`, {
        method: "DELETE",
      }).then((result) => {
        result.json().then((resp) => {
          setMovieData(resp);
        });
      });

      setDeletedStatus(true);
    }
  }

  return (
    <div>
      <Head>
        <title>Edit Review</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className={styles.main}>
        {deletedStatus ? (
          <div> Review Deleted </div>
        ) : (
          <div className={styles.inputContainer}>
            <h3>Edit review</h3>
            <input
              className={styles.title}
              value={movieData?.title}
              placeholder="Title"
              onChange={(e) => setMovieTitle(e.target.value)}
              type="text"
            />
            <input
              className={styles.stars}
              value={movieData?.stars}
              placeholder="Stars"
              onChange={(e) => setStars(e.target.value)}
              type="text"
            />

            <input
              className={styles.director}
              value={movieData?.director}
              placeholder="Director"
              onChange={(e) => setDirector(e.target.value)}
              type="text"
            />
            <input
              className={styles.poster}
              value={movieData?.movieImg}
              placeholder="Poster url"
              onChange={(e) => setMovieImg(e.target.value)}
              type="text"
            />

            <input
              className={styles.description}
              value={movieData?.description}
              placeholder="Description"
              onChange={(e) => setDescription(e.target.value)}
              type="text"
            />
            <input
              className={styles.review}
              value={movieData?.review}
              placeholder="Review"
              onChange={(e) => setReview(e.target.value)}
              type="text"
            />

            <div>
              <button
                className={styles.editButton}
                type="submit"
                onClick={updateReview}
                disabled={movieTitle === undefined}
              >
                Update
              </button>

              <button
                className={styles.deleteButton}
                type="submit"
                onClick={deleteReview}
                disabled={movieTitle === undefined}
              >
                Remove
              </button>
            </div>

            <Toaster />
          </div>
        )}
      </main>
    </div>
  );
}
